apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  labels:
    app: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    nauta_release: {{ required "NAUTA Release name is required" .Values.global.nauta }}
    nauta_release_version: {{ required "NAUTA Release version is required" .Values.global.nauta_release }}
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        master: "True"
      tolerations:
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      - key: "master"
        operator: "Exists"
        effect: "NoSchedule"
      volumes:
      - name: kube-dns-config
        configMap:
          name: {{ .Release.Name }}-{{ .Chart.Name }}
          optional: true
      containers:
      - name: kubedns
        image: {{ required "NAUTA Registry is required" .Values.global.nauta_registry }}/{{ required "NAUTA KubeDNS image is required" .Values.kubedns_image }}
        resources:
          requests:
            cpu: 100m
            memory: 128m
        livenessProbe:
          httpGet:
            path: /healthcheck/kubedns
            port: 10054
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 3
          timeoutSeconds: 5
        command:
        - /kube-dns
        - --domain={{ required "Domain is required" .Values.Domain }}.
        - --dns-port=10053
        - --config-dir=/kube-dns-config
        - --v=2
        env:
        - name: PROMETHEUS_PORT
          value: "10055"
        ports:
        - containerPort: 10053
          name: dns-local
          protocol: UDP
        - containerPort: 10053
          name: dns-tcp-local
          protocol: TCP
        - containerPort: 10055
          name: metrics
          protocol: TCP
        volumeMounts:
        - name: kube-dns-config
          mountPath: /kube-dns-config
      - name: dnsmasq
        image: {{ required "NAUTA Registry is required" .Values.global.nauta_registry }}/{{ required "NAUTA nfs image is required" .Values.nanny_image }}
        resources:
          requests:
            cpu: 100m
            memory: 128m
        livenessProbe:
          httpGet:
            path: /healthcheck/dnsmasq
            port: 10054
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        command:
        - /dnsmasq-nanny
        - -v=2
        - -logtostderr
        - -configDir=/etc/k8s/dns/dnsmasq-nanny
        - -restartDnsmasq=true
        - --
        - -k
        - --cache-size=1000
        - --no-negcache
        - --log-facility=-
        - --server=/{{ required "Domain is required" .Values.Domain }}/127.0.0.1#10053
        - --server=/in-addr.arpa/127.0.0.1#10053
        - --server=/ip6.arpa/127.0.0.1#10053
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        volumeMounts:
        - name: kube-dns-config
          mountPath: /etc/k8s/dns/dnsmasq-nanny
      - name: sidecar
        image: {{ required "NAUTA Registry is required" .Values.global.nauta_registry }}/{{ required "NAUTA nfs image is required" .Values.sidecar_image }}
        resources:
          requests:
            cpu: 100m
            memory: 128m
        livenessProbe:
          httpGet:
            path: /metrics
            port: 10054
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        command:
        - /sidecar
        - --v=2
        - --logtostderr
        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.{{ required "Domain is required" .Values.Domain }},5,SRV
        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.{{ required "Domain is required" .Values.Domain }},5,SRV
        ports:
        - containerPort: 10054
          name: metrics
          protocol: TCP
      dnsPolicy: Default
      serviceAccountName: {{ .Release.Name }}-{{ .Chart.Name }}

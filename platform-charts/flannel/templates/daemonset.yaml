{{- $root := . -}}
{{- range (required "Space separated interfaces list is required" .Values.interfaces) }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ $root.Release.Name }}-{{ $root.Chart.Name }}-{{ . }}
  labels:
    app: {{ $root.Release.Name }}
    chart: {{ $root.Chart.Name }}-{{ $root.Chart.Version | replace "+" "_" }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
    nauta_release: {{ required "NAUTA Release name is required" $root.Values.global.nauta }}
    nauta_release_version: {{ required "NAUTA Release version is required" $root.Values.global.nauta_release }}
    iface: "{{ . }}"
spec:
  selector:
    matchLabels:
      app: {{ $root.Release.Name }}
      chart: {{ $root.Chart.Name }}-{{ $root.Chart.Version | replace "+" "_" }}
      release: {{ $root.Release.Name }}
      heritage: {{ $root.Release.Service }}
      iface: "{{ . }}"
  template:
    metadata:
      labels:
        app: {{ $root.Release.Name }}
        chart: {{ $root.Chart.Name }}-{{ $root.Chart.Version | replace "+" "_" }}
        release: {{ $root.Release.Name }}
        heritage: {{ $root.Release.Service }}
        iface: "{{ . }}"
    spec:
      tolerations:
      - key: "master"
        operator: "Exists"
        effect: "NoSchedule"
      - operator: "Exists"
        effect: "NoSchedule"
      hostNetwork: true
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        iface: "{{ . }}"
      serviceAccountName: {{ $root.Release.Name }}-{{ $root.Chart.Name }}
      initContainers:
      - name: install-cni
        image: {{ required "NAUTA Registry is required" $root.Values.global.nauta_registry }}/{{ required "NAUTA dashboard image is required" $root.Values.image }}
        command:
        - cp
        resources:
          requests:
            cpu: 100m
            memory: 128m
        args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        volumeMounts:
        - name: cni
          mountPath: /etc/cni/net.d
        - name: flannel-cfg
          mountPath: /etc/kube-flannel/
      containers:
      - name: kube-flannel
        image: {{ required "NAUTA Registry is required" $root.Values.global.nauta_registry }}/{{ required "NAUTA dashboard image is required" $root.Values.image }}
        command:
        - /opt/bin/flanneld
        resources:
          requests:
            cpu: 100m
            memory: 128m
        args:
        - --ip-masq
        - --kube-subnet-mgr
        - --iface={{ . }}
        securityContext:
          privileged: true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: run
          mountPath: /run
        - name: flannel-cfg
          mountPath: /etc/kube-flannel/
      volumes:
        - name: run
          hostPath:
            path: /run
        - name: cni
          hostPath:
            path: /etc/cni/net.d
        - name: flannel-cfg
          configMap:
            name: {{ $root.Release.Name }}-{{ $root.Chart.Name }}
{{- end }}

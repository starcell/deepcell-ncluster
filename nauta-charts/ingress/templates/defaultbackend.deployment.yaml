apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-defaultbackend
  labels:
    app: {{ .Release.Name }}-defaultbackend
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    nauta_release: {{ required "NAUTA Release name is required" .Values.global.nauta }}
    nauta_release_version: {{ required "NAUTA Release version is required" .Values.global.nauta_release }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-defaultbackend
      chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-defaultbackend
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      tolerations:
      - key: "master"
        operator: "Exists"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: master
                operator: In
                values:
                - "True"
      terminationGracePeriodSeconds: 60
      containers:
      - name: default-http-backend
        image: {{ required "NAUTA Registry is required" .Values.global.nauta_registry }}/{{ required "NAUTA DefaultBackend image is required" .Values.defaultbackend_image }}
        resources:
          requests:
            cpu: 100m
            memory: 64m
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080

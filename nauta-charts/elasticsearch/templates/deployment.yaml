apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    nauta_release: {{ required "NAUTA Release name is required" .Values.global.nauta }}
    nauta_release_version: {{ required "NAUTA Release version is required" .Values.global.nauta_release }}
    nauta_app_name: elasticsearch
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
      chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      heritage: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        heritage: {{ .Release.Service }}
        nauta_app_name: elasticsearch
    spec:
      tolerations:
      - key: "master"
        operator: "Exists"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: master
                operator: In
                values:
                - "True"
      initContainers:
      - command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        image: {{ required "NAUTA Registry is required" .Values.global.nauta_registry }}/{{ required "NAUTA elasticsearch init image is required" .Values.init_image }}
        imagePullPolicy: IfNotPresent
        name: init-sysctl
        resources: {}
        securityContext:
          privileged: true
      containers:
      - name: {{ .Chart.Name }}-proxy
        image: {{ required "NAUTA Registry is required" .Values.global.nauta_registry }}/{{ required "NAUTA elasticsearch proxy image is required" .Values.proxy_image }}
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 9201
          protocol: TCP
        volumeMounts:
          - mountPath: "/var/es-proxy-auth"
            name: es-proxy-auth
            readOnly: true
      - name: {{ .Chart.Name }}
        image: {{ required "NAUTA Registry is required" .Values.global.nauta_registry }}/{{ required "NAUTA elasticsearch image is required" .Values.image }}
        imagePullPolicy: "IfNotPresent"
        env:
        - name: ES_JAVA_OPTS
          value: "-Xmx1G -Xms1G -XX:+UnlockDiagnosticVMOptions -XX:+PrintCompressedOopsMode -XX:HeapDumpPath=/data"
        - name: PROCESSORS
          value: "2"
        - name: NODE_MASTER
          value: "true"
        - name: NODE_DATA
          value: "true"
        - name: NETWORK_HOST
          value: "_site_"
        resources:
          requests:
            memory: 2Gi
            cpu: 2
        readinessProbe:
          httpGet:
            path: /_cluster/health?wait_for_status=yellow&wait_for_no_initializing_shards&timeout=60s
            port: 9201
          initialDelaySeconds: 20
          timeoutSeconds: 60
        volumeMounts:
        - name: data
          mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Chart.Name }}
        - name: es-proxy-auth
          secret:
            secretName: es-proxy-auth

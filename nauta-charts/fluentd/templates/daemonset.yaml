apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    nauta_release: {{ required "NAUTA Release name is required" .Values.global.nauta }}
    nauta_release_version: {{ required "NAUTA Release version is required" .Values.global.nauta_release }}
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
      chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      heritage: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        heritage: {{ .Release.Service }}
    spec:
      tolerations:
      - key: "master"
        operator: "Exists"
        effect: "NoSchedule"
      serviceAccountName: {{ .Release.Name }}-{{ .Chart.Name }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ required "NAUTA Registry is required" .Values.global.nauta_registry }}/{{ required "NAUTA fluentd image is required" .Values.image }}
        imagePullPolicy: "IfNotPresent"
        env:
          - name:  FLUENT_ELASTICSEARCH_HOST
            value: "elasticsearch"
          - name:  FLUENT_ELASTICSEARCH_PORT
            value: "9200"
          - name:  FLUENTD_CONF
            value: custom-config/fluent.conf
          - name: FLUENT_ELASTICSEARCH_USER
            value: {{ .Values.global.elasticsearch.admin_username }}
          - name: FLUENT_ELASTICSEARCH_PASSWORD
            value: {{ .Values.global.elasticsearch.admin_password }}
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config-volume
          mountPath: /fluentd/etc/custom-config
        livenessProbe:
          initialDelaySeconds: 300
          periodSeconds: 60
          exec:
            command:
              - '/bin/bash'
              - '-c'
              - >
                set -e;
                echo "Log rotate" >> /var/log/containers/dummy.log;
                sleep 30;
                LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-120};
                LAST_MODIFIED_DATE=$(stat /var/log/fluentd-containers.log.pos | grep Modify | cut -d ':' -f 1 --complement);
                LAST_MODIFIED_TIMESTAMP=$(date --date "${LAST_MODIFIED_DATE}" +%s);
                if [ $(date +%s) -gt $(expr ${LAST_MODIFIED_TIMESTAMP} + ${LIVENESS_THRESHOLD_SECONDS}) ]; then exit 1; fi;
                if [ $(wc -l < /var/log/containers/dummy.log) -gt 100 ]; then rm /var/log/containers/dummy.log; fi;
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config-volume
        configMap:
          name: {{ .Release.Name }}-{{ .Chart.Name }}
          items:
          - key: fluent.conf
            path: fluent.conf

---

- name: Show cache repository settings
  debug:
    msg: "{{ docker_repository_cache }}"

- name: Create docker registry directories
  file:
    path: "{{ build_dir }}/data/{{ item }}"
    state: directory
  with_items:
    - registry
    - artifacts
    - facts

- name: Create docker registry directories
  file:
    path: "{{ build_dir }}/{{ item }}"
    state: directory
  with_items:
    - tmp

- name: Unarchive input package
  shell: "tar -xf {{ input_package }} -C {{ build_dir }}/tmp"
  when: input_package | default(False)

- name: Set Default fact
  set_fact:
    build_facts: {}
  when: not input_package | default(False)

- name: Load variables
  include_vars:
    dir: "{{ build_dir }}/tmp/facts"
    extensions:
      - yaml
      - yml
    name: build_facts
  when: input_package | default(False)

- name: Set dir facts
  set_fact:
    registry_dir: "{{ build_dir }}/data/registry"
    artifacts_dir: "{{ build_dir }}/data/artifacts"
    facts_dir: "{{ build_dir }}/data/facts"

- name: Register fact
  set_fact:
    registry_name: "yum-registry-{{ build_name }}-{{ version }}-{{ 9999999999999999999999 | random | to_uuid }}"

- name: Start registry container
  docker_container:
    name: "{{ registry_name }}"
    env: "{{ proxy }}"
    volumes:
      - "{{ registry_dir }}:/var/lib/registry"
    ports:
      - 5000
    image: "registry:2"
    stop_timeout: 0
    recreate: True
    restart_policy: no
    user: "{{ user_id }}"
    timeout: "{{ docker_timeout }}"
  register: registry
  notify:
    - Cleanup registry container

- set_fact:
    registry_port: "{{ registry.ansible_facts.docker_container.NetworkSettings.Ports['5000/tcp'][0].HostPort }}"

---

- set_fact:
    docker_images_local_tags: {}
    docker_images_remote_tags: {}
    docker_images_remote_exists: {}
    docker_images_base: {}
    docker_images_organized: "{{ images | organize_images }}"
    docker_defined_images: {}
    docker_defined_data: {}

- name: Register each image if defined in parent build
  vars:
    name: "{{ image_def.key }}"
    image: "{{ image_def.value }}"
    defined: "{{ image_def.key in build_facts.package_attached_images | default({}) }}"
  loop_control:
    loop_var: image_def
  set_fact:
    docker_defined_images: "{{ docker_defined_images | combine({name: defined}) }}"
  with_dict: "{{ images }}"

- name: Register each defined image
  vars:
    name: "{{ image_def.key }}"
    image: "{{ image_def.value }}"
  loop_control:
    loop_var: image_def
  set_fact:
    docker_defined_data: "{{ docker_defined_data | combine({name: build_facts.package_attached_images[name]}) }}"
  with_dict: "{{ images }}"
  when: docker_defined_images[name]

- debug: var=docker_defined_images

- name: Calculate local repository tags for all images
  vars:
    name: "{{ image_def.key }}"
    image: "{{ image_def.value }}"
  loop_control:
    loop_var: image_def
  include_tasks: "local_tag.yml"
  with_dict: "{{ images }}"

- name: Calculate remote repository tags for all images
  include_tasks: "remote_tag.yml"
  loop_control:
    loop_var: layer
  with_list: "{{ docker_images_organized }}"

- name: Verify presence of base images
  vars:
    name: "{{ image_def.key }}"
    image: "{{ image_def.value }}"
  loop_control:
    loop_var: image_def
  include_tasks: "base.yml"
  with_dict: "{{ images }}"

- name: Check if image exists
  vars:
    name: "{{ image_def.key }}"
    image: "{{ image_def.value }}"
  loop_control:
    loop_var: image_def
  include_tasks: "exists.yml"
  with_dict: "{{ images }}"

- name: Load image layers
  include_tasks: load.yml

- name: Build image layers
  include_tasks: build.yml
  loop_control:
    loop_var: layer
  with_list: "{{ docker_images_organized }}"

- name: Save image layers
  include_tasks: save.yml

- name: Push image layers
  include_tasks: push.yml
  when: push_local | default(True)

- name: Fetch artifacts
  include_tasks: artifact.yml

- name: Render facts
  template:
    src: "{{ item }}.j2"
    dest: "{{ facts_dir }}/{{ item }}"
  with_items:
    - images.yaml
  when: docker_repository_cache.enabled

- name: Render facts
  template:
    src: "{{ item }}.j2"
    dest: "{{ facts_dir }}/{{ item }}"
  with_items:
    - images_no_cache.yaml
  when: not docker_repository_cache.enabled

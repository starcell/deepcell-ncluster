---

- name: "{{ message_label }} Calculate usage values"
  set_fact:
    current_memory: "{{ ansible_memory_mb.real.total }}"
    current_cpus: "{{ ansible_processor_vcpus }}"
    reserved_memory: "{% if ansible_memory_mb.real.total / 50 > 1024 %}{{ (ansible_memory_mb.real.total / 50) | int }}{% else %}1024{% endif %}"

- name: "{{ message_label }} Set usage values"
  set_fact:
    host_reserved:
      memory: "{{ reserved_memory }}"
      cpus: "1"
    docker_reserved:
      memory: "{{ current_memory | int - reserved_memory | int }}"
      cpus: "{{ current_cpus | int - 1 }}"

- name: "{{ message_label }} Set facts for host definition"
  set_fact:
    nauta_configuration:
      network:
        instance_name: "{{ inventory_hostname }}.node.{{ nodes_domain }}.{{ domain }}"
      external_interface:
        definition: "{{ hostvars[inventory_hostname]['ansible_' + external_interface] }}"
        ipv4: "{{ hostvars[inventory_hostname]['ansible_' + external_interface].ipv4 }}"
        ipv4_address: "{{ hostvars[inventory_hostname]['ansible_' + external_interface].ipv4.address }}"
        ipv4_network: "{{ hostvars[inventory_hostname]['ansible_' + external_interface].ipv4.network }}"
        ipv4_netmask: "{{ hostvars[inventory_hostname]['ansible_' + external_interface].ipv4.netmask }}"
      internal_interface:
        definition: "{{ hostvars[inventory_hostname]['ansible_' + internal_interface] }}"
        ipv4: "{{ hostvars[inventory_hostname]['ansible_' + internal_interface].ipv4 }}"
        ipv4_address: "{{ hostvars[inventory_hostname]['ansible_' + internal_interface].ipv4.address }}"
        ipv4_network: "{{ hostvars[inventory_hostname]['ansible_' + internal_interface].ipv4.network }}"
        ipv4_netmask: "{{ hostvars[inventory_hostname]['ansible_' + internal_interface].ipv4.netmask }}"
      data_interface:
        definition: "{{ hostvars[inventory_hostname]['ansible_' + data_interface] }}"
        ipv4: "{{ hostvars[inventory_hostname]['ansible_' + data_interface].ipv4 }}"
        ipv4_address: "{{ hostvars[inventory_hostname]['ansible_' + data_interface].ipv4.address }}"
        ipv4_network: "{{ hostvars[inventory_hostname]['ansible_' + data_interface].ipv4.network }}"
        ipv4_netmask: "{{ hostvars[inventory_hostname]['ansible_' + data_interface].ipv4.netmask }}"

---

- name: "{{ message_label }} Get current version of release"
  environment: "{{ local_envs }}"
  shell: "{{ runtime_kubectl }} -n nauta get cm nauta -o 'jsonpath={.metadata.labels.nauta_release_version}'"
  changed_when: False
  register: nauta_version_remote

- name: "{{ message_label }} Register fact if version is matching"
  set_fact:
    nauta_version_match: "{{ nauta_version == nauta_version_remote.stdout }}"

- name: Get gitea's nauta-db secret
  environment: "{{ local_envs }}"
  shell: "{{ runtime_kubectl }} -n nauta get secret nauta-db -o 'jsonpath={.data.dbPassword}' | base64 --decode"
  register: gitea_db_secret
  ignore_errors: True

- name: Get gitea's admin password
  environment: "{{ local_envs }}"
  shell: "{{ runtime_kubectl }} -n nauta get secret nauta-gitea-admin-secret -o 'jsonpath={.data.password}' | base64 --decode"
  register: gitea_admin_password
  ignore_errors: True

- name: Set upgrade values for gitea
  set_fact:
    nauta_upgrade_values:
      global:
        giteaPostgresPassword: "{{ gitea_db_secret.stdout }}"
        giteaAdminPassword: "{{ gitea_admin_password.stdout }}"
  when:
    - gitea_db_secret.rc == 0
    - gitea_admin_password.rc == 0

- name: "Render upgrade values"
  vars:
    rendered_values: "{{ nauta_upgrade_values | default({}) }}"
  copy:
    content: "{{ rendered_values | to_nice_yaml(width=50, explicit_start=True, explicit_end=True) }}"
    dest: "{{ workspace }}/nauta-{{ nauta_version }}-upgrade.values.yaml"

- name: "{{ message_label }} Upgrade helm chart if required"
  environment: "{{ local_envs }}"
  shell: "{{ runtime_helm }} upgrade nauta {{ runtime_nauta_chart }} --timeout {{ helm_timeout }} --wait -f {{ workspace }}/nauta-{{ nauta_version }}.values.yaml -f {{ workspace }}/nauta-{{ nauta_version }}-upgrade.values.yaml --recreate-pods"
  when:
    - not chart is changed
    - upgrade | default(False) | bool
    - not nauta_version_match

- name: "{{ message_label }} Fail if upgrade is not possible"
  fail:
    msg: NAUTA is already installed and upgrade option is not selected
  when:
    - chart is not changed
    - not (upgrade | default(False) | bool)
    - not nauta_version_match
